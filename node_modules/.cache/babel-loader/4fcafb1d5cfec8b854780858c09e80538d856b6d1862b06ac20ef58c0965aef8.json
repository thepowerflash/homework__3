{"ast":null,"code":"import { types } from \"./types\";\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } from './userActionTypes';\nfunction preloaderOn() {\n  return {\n    type: types.PRELOADER_ON\n  };\n}\nfunction preloaderOff() {\n  return {\n    type: types.PRELOADER_OFF\n  };\n}\nexport function addUserAction(user) {\n  return async function (dispatch) {\n    dispatch(preloaderOn());\n    const options = {\n      method: \"POST\",\n      headeres: {\n        \"content-Type\": 'application/json'\n      },\n      body: JSON.stringify(user)\n    };\n    const response = await fetch('https://jsonplaceholder.typicode.com/', options);\n    if (response.status === 200 || response.status === 404) {\n      dispatch(preloaderOff());\n    }\n  };\n}\nexport const fetchUsersRequest = () => ({\n  type: FETCH_USERS_REQUEST\n});\nexport const fetchUsersSuccess = users => ({\n  type: FETCH_USERS_SUCCESS,\n  payload: users\n});\nexport const fetchUsersFailure = error => ({\n  type: FETCH_USERS_FAILURE,\n  payload: error\n});","map":{"version":3,"names":["types","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","preloaderOn","type","PRELOADER_ON","preloaderOff","PRELOADER_OFF","addUserAction","user","dispatch","options","method","headeres","body","JSON","stringify","response","fetch","status","fetchUsersRequest","fetchUsersSuccess","users","payload","fetchUsersFailure","error"],"sources":["C:/Users/gene_/OneDrive/Рабочий стол/my-lesson-33/src/redux/actions.js"],"sourcesContent":["import { types } from \"./types\"\r\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } from './userActionTypes';\r\nfunction preloaderOn (){\r\n    return{\r\n        type: types.PRELOADER_ON \r\n    }\r\n}\r\nfunction preloaderOff (){\r\n    return{\r\n        type: types.PRELOADER_OFF \r\n    }\r\n}\r\n\r\nexport function addUserAction (user) {\r\n    return async function (dispatch) {\r\n        dispatch(preloaderOn())\r\n        const options = {\r\n            method: \"POST\",\r\n            headeres: {\r\n                \"content-Type\": 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        }\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/', options)\r\n        if(response.status===200 || response.status===404){\r\n            dispatch(preloaderOff())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchUsersRequest = () => ({\r\n  type: FETCH_USERS_REQUEST,\r\n});\r\n\r\nexport const fetchUsersSuccess = (users) => ({\r\n  type: FETCH_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const fetchUsersFailure = (error) => ({\r\n  type: FETCH_USERS_FAILURE,\r\n  payload: error,\r\n});"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,mBAAmB;AACjG,SAASC,WAAWA,CAAA,EAAG;EACnB,OAAM;IACFC,IAAI,EAAEL,KAAK,CAACM;EAChB,CAAC;AACL;AACA,SAASC,YAAYA,CAAA,EAAG;EACpB,OAAM;IACFF,IAAI,EAAEL,KAAK,CAACQ;EAChB,CAAC;AACL;AAEA,OAAO,SAASC,aAAaA,CAAEC,IAAI,EAAE;EACjC,OAAO,gBAAgBC,QAAQ,EAAE;IAC7BA,QAAQ,CAACP,WAAW,CAAC,CAAC,CAAC;IACvB,MAAMQ,OAAO,GAAG;MACZC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;QACN,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC;IACD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAEP,OAAO,CAAC;IAC9E,IAAGM,QAAQ,CAACE,MAAM,KAAG,GAAG,IAAIF,QAAQ,CAACE,MAAM,KAAG,GAAG,EAAC;MAC9CT,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC;AACL;AAGA,OAAO,MAAMc,iBAAiB,GAAGA,CAAA,MAAO;EACtChB,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMqB,iBAAiB,GAAIC,KAAK,KAAM;EAC3ClB,IAAI,EAAEH,mBAAmB;EACzBsB,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAIC,KAAK,KAAM;EAC3CrB,IAAI,EAAEF,mBAAmB;EACzBqB,OAAO,EAAEE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}